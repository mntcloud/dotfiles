{
    "name": "Jellybeans",
    "variables": {
        "comment": "#888888",

        "special": "#799d6a",
        "constant": "#cf6a4c",
        "delimiter": "#668799",

        "string": "#99ad6a",
        "string_delimiter": "#556633",
        "identifier": "#c6b6ee",
        "instance_identifier": "#c6b6fe",
        "structure": "#8fbfdc",
        "function": "#fad07a",
        // jellybeans.vim sets sligthly different
        // color shade than commented one
        // "statement": "#8197bf",
        "statement": "#8882b0",
        "preproc": "#8fbfdc",
        "special": "#799d6a",
        "type": "#ffb964",
        "error_msg": "#902020",

        "syntax_color_renamed": "#2B5B77",
        "syntax_color_added": "#437019",
        "syntax_color_modified": "#2B5B77",
        "syntax_color_removed": "#700009",

        "syntax_bg": "#151515",
        "syntax_fg": "#e8e8d3",
        "syntax_accent": "#b0d0f0",
        "syntax_gutter": "#EAE1D2",
        "syntax_selection": "#606060",
        "syntax_fold_bg": "#d1cec7",
        "syntax_cursor_line": "#151515"
    },
    "globals": {
        "background": "var(syntax_bg)",
        "foreground": "var(syntax_fg)",
        "invisibles": "#5c61664d",
        "caret": "var(syntax_accent)",
        "block_caret": "var(syntax_cursor_line)",
        "line_highlight": "var(syntax_bg)",
        "accent": "var(syntax_accent)",
        "gutter": "var(syntax_bg)",
        "gutter_foreground": "#605958",
        "line_diff_width": "3",
        "line_diff_added": "var(syntax_color_added)",
        "line_diff_modified": "var(syntax_color_modified)",
        "line_diff_deleted": "var(syntax_color_removed)",
        "selection": "var(syntax_bg)",
        "selection_border": "var(syntax_selection)",
        "selection_border_width": "1",
        "selection_corner_style": "round",
        "selection_corner_radius": "4",
        "shadow": "#fcfcfc50",
        "shadow_width": "2"
    },
    "rules": [
        {
            "name": "Comment",
            "scope": "comment",
            "font_style": "italic",
            "foreground": "var(comment)"
        },
        {
            "name": "String",
            "scope": "string - meta.template, constant.other.symbol, string.quoted",
            "foreground": "var(string)"
        },
        {
            "name": "Regular Expressions and Escape Characters",
            "scope": "string.regexp, constant.character, constant.other",
            "foreground": "var(constant)"
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": "var(constant)"
        },
        {
            "name": "Built-in constants",
            "scope": "constant.language",
            "foreground": "var(constant)"
        },
        {
            "name": "Constants",
            "scope": "meta.constant, entity.name.constant",
            "foreground": "var(identifier)"
        },
        {
            "name": "Variable",
            "scope": "variable",
            "foreground": "var(syntax_fg)"
        },
        {
            "name": "Member Variable",
            "scope": "variable.member",
            "foreground": "var(instance_identifier)"
        },
        {
            "name": "Language variable",
            "scope": "variable.language",
            "foreground": "var(statement)"
        },
        {
            "name": "Storage",
            "scope": "storage, storage.type",
            "foreground": "var(statement)"
        },
        {
            "name": "Storage Source",
            "scope": "storage.type.source",
            "foreground": "var(type)"
        },
        {
            "name": "Objective-C type fixes",
            "scope": "source.objc meta.return-type storage.type, source.objc storage.type.c",
            "foreground": "var(type)"
        },
        /*
        {
            "name": "Objective-C modifiers fixes",
            "scope": "source.objc storage.modifier.c",
            "foreground": "var(type)"
        },
        */
        {
            "name": "Keyword",
            "scope": "keyword",
            "foreground": "var(statement)"
        },
        {
            "name": "Objective-C Statement",
            "scope": "storage.type.objc, source.objc keyword.other.property",
            "foreground": "var(constant)"
        },
        {
            "name": "Structure",
            "scope": "keyword.declaration",
            "foreground": "var(structure)"
        },
        {
            "name": "Operator",
            "scope": "keyword.operator",
            "foreground": "var(structure)"
        },
        {
            "name": "Ruby Keyword Function",
            "scope": "keyword.declaration.function.ruby, source.ruby keyword.control.block",
            "foreground": "var(preproc)"
        },
        {
            "name": "Ruby Symbol",
            "scope": "source.ruby constant.other.symbol",
            "foreground": "#7697d6"
        },
        {
            "name": "Java keyword fixes",
            "scope": "source.java meta.class.java meta.class.identifier.java storage.type.java",
            "foreground": "var(type)"
        },
        {
            "name": "Operators",
            "scope": "keyword.operator",
            "foreground": "var(structure)"
        },
        {
            "name": "Separators like ; or ,",
            "scope": "punctuation.separator, punctuation.terminator",
            "foreground": "#a2a293"
        },
        {
            "name": "Punctuation",
            "scope": "punctuation.section",
            "foreground": "#a2a293"
        },
        {
            "name": "Accessor",
            "scope": "punctuation.accessor",
            "foreground": "var(structure)"
        },
        {
            "name": "JavaScript/TypeScript interpolation punctuation",
            "scope": "punctuation.definition.template-expression",
            "foreground": "var(string_delimiter)"
        },
        {
            "name": "JSX/TSX curly braces",
            "scope": "punctuation.definition.interpolation",
            "foreground": "var(structure)"
        },
        {
            "name": "Curly braces",
            "scope": "punctuation.section.block",
            "foreground": "var(structure)"
        },
        {
            "name": "Group",
            "scope": "punctuation.section.group",
            "foreground": "#a2a293"
        },
        {
            "name": "Generic",
            "scope": "punctuation.definition.generic",
            "foreground": "#a2a293"
        },
        {
            "name": "Brackets",
            "scope": "punctuation.section.brackets",
            "foreground": "var(structure)"
        },
        {
            "name": "Ruby interpolation punctuation",
            "scope": "punctuation.section.interpolation",
            "foreground": "var(identifier)"
        },
        {
            "name": "Types fixes",
            "scope": "source.java storage.type, source.haskell storage.type, source.c storage.type, source.zig storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "Inherited class type",
            "scope": "entity.other.inherited-class",
            "foreground": "var(type)"
        },
        {
            "name": "Lambda arrow",
            "scope": "storage.type.function",
            "foreground": "var(statement)"
        },
        {
            "name": "Java primitive variable types",
            "scope": "source.java storage.type.primitive",
            "foreground": "var(type)"
        },
        {
            "name": "Function name",
            "scope": "entity.name.function",
            "foreground": "var(syntax_fg)"
        },
        {
            "name": "Ruby function name",
            "scope": "entity.name.function.ruby",
            "foreground": "var(function)"
        },
        {
            "name": "Function arguments",
            "scope": "variable.parameter, meta.parameter",
            "foreground": "var(syntax_fg)"
        },
        {
            "name": "Function call",
            "scope": "variable.function, variable.annotation, meta.function-call.generic, support.function.go",
            "foreground": "var(function)"
        },
        {
            "name": "Library function",
            "scope": "support.function, support.macro",
            "foreground": "var(preproc)"
        },
        {
            "name": "Imports and packages",
            "scope": "entity.name.import, entity.name.package",
            "foreground": "var(preproc)"
        },
        {
            "name": "Imports",
            "scope": "keyword.control.import",
            "foreground": "var(preproc)"
        },
        {
            "name": "Entity name",
            "scope": "entity.name, source.js meta.function-call.constructor variable.type",
            "foreground": "var(identifier)"
        },
        {
            "name": "Ruby Entity name",
            "scope": "source.ruby entity.name",
            "foreground": "var(type)"
        },
        {
            "name": "Tag",
            "scope": "entity.name.tag, meta.tag.sgml",
            "foreground": "var(identifier)"
        },
        {
            "name": "Tag Native",
            "scope": "entity.name.tag.native",
            "foreground": "var(statement)"
        },
        {
            "name": "Tag start/end",
            "scope": "punctuation.definition.tag.end, punctuation.definition.tag.begin, punctuation.definition.tag",
            "foreground": "var(statement)"
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "foreground": "var(type)"
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "font_style": "italic",
            "foreground": "var(identifier)"
        },
        {
            "name": "Library class/type",
            "scope": "support.type, support.class, source.go storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "Library type primitive",
            "scope": "support.type.primitive",
            "foreground": "var(constant)"
        },
        {
            "name": "Decorators/annotation",
            "scope": "meta.decorator variable.other, meta.decorator punctuation.decorator, storage.type.annotation, variable.annotation, punctuation.definition.annotation",
            "foreground": "var(function)"
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "#e65050"
        },
        {
            "name": "diff.header",
            "scope": "meta.diff, meta.diff.header",
            "foreground": "var(uno_2)"
        },
        {
            "name": "Ruby class methods",
            "scope": "source.ruby variable.other.readwrite",
            "foreground": "var(identifier)"
        },
        {
            "name": "CSS tag names",
            "scope": "source.css entity.name.tag, source.sass entity.name.tag, source.scss entity.name.tag, source.less entity.name.tag, source.stylus entity.name.tag",
            "foreground": "var(statement)"
        },
        {
            "name": "CSS browser prefix",
            "scope": "source.css support.type, source.sass support.type, source.scss support.type, source.less support.type, source.stylus support.type",
            "foreground": "var(type)"
        },
        {
            "name": "CSS Properties",
            "scope": "support.type.property-name",
            "font_style": "normal",
            "foreground": "var(type)"
        },
        {
            "scope": "message.error",
            "foreground": "var(uno_1)"
        },
        {
            "name": "Markup heading",
            "scope": "markup.heading, markup.heading entity.name",
            "font_style": "bold",
            "foreground": "var(syntax_accent)"
        },
        {
            "name": "Markup links",
            "scope": "markup.underline.link, string.other.link",
            "foreground": "var(type)"
        },
        {
            "name": "Markup Italic",
            "scope": "markup.italic",
            "font_style": "italic",
            "foreground": "var(syntax_fg)"
        },
        {
            "name": "Markup Bold",
            "scope": "markup.bold",
            "font_style": "bold",
            "foreground": "var(syntax_fg)"
        },
        {
            "name": "Markup Bold/italic",
            "scope": "markup.italic markup.bold, markup.bold markup.italic",
            "font_style": "bold italic"
        },
        {
            "name": "Markup Code",
            "scope": "markup.raw",
            "background": "var(syntax_bg)"
        },
        {
            "name": "Markup Code Inline",
            "scope": "markup.raw.inline",
            "background": "var(syntax_bg)"
        },
        {
            "name": "Markdown Separator",
            "scope": "meta.separator",
            "font_style": "bold",
            "background": "#5c61660f",
            "foreground": "var(syntax_fg)"
        },
        {
            "name": "Markup Blockquote",
            "scope": "markup.quote",
            "foreground": "var(statement)",
            "font_style": "italic"
        },
        {
            "name": "Markup List Bullet",
            "scope": "markup.list punctuation.definition.list.begin",
            "foreground": "var(statement)"
        },
    ]
}